/*++----------------------------------------------------------------------------------------------------------------------------------------------------------------------
1. 项目名称：ares
2. 文件名：src -> application -> controllers -> esf -> list -> renderer.js
3. 作者：zhaohuagang@lifang.com
4. 备注：二手房列表页面渲染器
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/

/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
加载配置及工具
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
import AppRendererControllerBasic from "../../renderer" ;
import ApiDataFilter from "../../../../system/libraries/apiDataFilter" ;
import UrlParser from "../../../../system/libraries/urlParser" ;
import guID from "../../../../system/libraries/guId" ;
import ParamGenerator from "../../xf/list/ParamGenerator";
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
创建一个渲染器实例
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
class Renderer extends AppRendererControllerBasic {
    constructor(req, res, next) {
        super(req, res, next) ;
        /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
        渲染模板
        -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/       
        this.renders() ;
    }
    /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
    渲染页面
    -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
    async renders() {
        let modulePathArray = [ "esf" , "list" ] ;
        try {
            /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            载入ApiDataFilter工具
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
            let adf = new ApiDataFilter(this.req.app) ;           
            let urlParser = new UrlParser(this.req.originalUrl); // new一个url处理的对象

            let param ={
                cityId: 43/*cityId*/,
                pageSize: 10
            };

            let data = null;
            
            // 如果有查询条件，按照查询条件加载数据，否则不加载数据
            if(this.req.params.condition){                
                let conditionObj = urlParser.parseCondition({condition: this.req.params.condition});             
                param = this.generateParams(conditionObj, param);                
                
            }else{
                // do nothing
            }   
            
            /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            扩展模板常规数据            
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
            Object.assign(this.templateData, {
                "title" : "二手房列表" ,
                "keywords" : "" ,
                "description" : "" ,
                "matchStylesheetPath" : modulePathArray.join("/") ,
                "controllerJavascriptPath" : modulePathArray.join("/")
            }) ;
            /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            通过拼音获取城市相关信息       
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
            let cityData = await adf.request({"apiPath" : "common.cityPinYin" , "data" : { "pinyin" : this.req.params.city } }) ;
            let cityModel = null;
            let defaultCityModel = {
                "cityId":43,
                "cityPinyin":"shanghai",
                "cityName":"上海",
                "oldBusiness":true,
                "newBusiness":true,
                "rentBusiness":true,
                "china":true,
                "cityOpen": true
            };
            
            if(cityData && cityData.data && cityData.data.cityId){            
                cityModel = cityData.data ;
                cityModel.cityOpen = cityModel.newBusiness ;                
            }else{                
                // 跳转到上海
                this.res.redirect('/shanghai/esf/');
                return;
            }   

            Object.assign(this.templateData, { "cityModel" : cityModel }) ;
            param.cityId = cityModel.cityId;
            data = await adf.request({
                "apiPath" : modulePathArray.join("."),
                "data" : param,
                "method":"post",
                "contentType":"application/json"
            }) ;

            Object.assign(this.templateData, {                 
                "matchStylesheetPath" : modulePathArray.join("/"),
                "controllerJavascriptPath" : modulePathArray.join("/"),
                "data": data
            }) ;     
            /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            埋点参数配置 
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
            Object.assign(this.templateData, {
                "bigDataParams" : {
                    "conningTower" : {
                        "search" : this.generateBigDataParams( { "eventName" : 1068017 , "eventParam" : {} } ) ,
                        "hamburg" : this.generateBigDataParams( { "eventName" : 1068027 , "eventParam" : {} } ) ,
                        "clearSearchHistory" : this.generateBigDataParams( { "eventName" : 1068015 } )
                    }
                }
            }) ;
            /*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
            渲染模板
            -----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/        
            this.render(modulePathArray.join("/")) ; 
        }
        catch(ex){
            this.next(ex) ;
        }
    }

    // 根据查询条件生成后端接口需要的查询参数
    generateParams(conditionObj, initObj) {
        
        return new ParamGenerator({
            of: function(ret, data){
                ret.offset = 0;
                ret.pageSize = data;
            }
        }).getParamObj(conditionObj, initObj);
    }
}
/*++-----------------------------------------------------------------------------------------------------------------------------------------------------------------------
最后将render暴露出去
-----------------------------------------------------------------------------------------------------------------------------------------------------------------------++*/
export default Renderer ;